name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  REGISTRY:  ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/news-backend
  PY_VERSION: "3.11"


jobs:
  backend-tests:
    name: "Backend: запуск тестів"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r ../requirements.txt

      - name: Запустити тести бекенду
        working-directory: ./backend
        run: |
          pip install pytest pytest-asyncio httpx
          pytest ../tests -q

  frontend-tests:
    name: "Frontend: перевірка доступності"
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install http-server
        run: sudo npm install -g http-server

      - name: Запустити локальний сервер фронтенду
        run: |
          cd frontend
          nohup http-server -p 8001 &

      - name: Перевірити доступність index.html
        run: |
          sleep 2
          curl -f http://localhost:8001/index.html

  docker-build: 
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io/vadim148852
      IMAGE_NAME: news-backend
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
